&c.+crew [v(d.cg)]=$+crew:@force %#=+sheet/crew;

&c.+crew2 [v(d.cg)]=$+crew2:@force %#=+sheet/crew2;

&c.+crew/create [v(d.cg)]=$+crew/create *:@break strmatch(%0, *=*); @assert not(isapproved(%#))={ @trigger me/tr.error=%#, You must be unapproved to create a new crew. Open a new +request to get unapproved and start working on it.; }; @assert cor(not(setr(C, ulocal(f.get-player-stat, %#, crew object))), t(member(%qC, %#)))={ @trigger me/tr.message=%#, This will take you out of your existing crew%, [ulocal(f.get-player-stat, %qC, Crew Name)]. If you're sure you want to proceed%, type '+crew/create %0=YES' within the next 15 minutes. The time is now [prettytime()].; @eval settimer(%#, crew.new, 900); }; @assert not(ulocal(f.has-crew-stats, %#))={ @trigger me/tr.message=%#, This will wipe your existing crew data. If you're sure you want to proceed%, type '+crew/create %0=YES' within the next 15 minutes. The time is now [prettytime()].; @eval settimer(%#, crew.new, 900); }; @set %#=[ulocal(f.get-stat-location-on-player, crew object)]:%#; @set %#=[ulocal(f.get-stat-location-on-player, crew name)]:%0; @trigger me/tr.success=%#, You have started a new crew called '%0'.;

&c.+crew/create_YES [v(d.cg)]=$+crew/create *=*: @assert gettimer(%#, crew.new)={ @trigger me/tr.error=%#, Your timeout has expired or you didn't type '+crew/create %0' yet. Please try again.; }; @assert t(match(%1, YES))={ @trigger me/tr.error=%#, You must type 'YES' to proceed with overwriting your old crew.; }; @wipe %#/[ulocal(f.get-stat-location-on-player, crew*)]; @eval iter(ulocal(f.get-crew-stats), set(%#, ulocal(f.get-stat-location-on-player, itext(0)):), |); @set %#=[ulocal(f.get-stat-location-on-player, crew object)]:%#; @set %#=[ulocal(f.get-stat-location-on-player, crew name)]:%0; @trigger me/tr.success=%#, You have started a new crew called '%0'. Be aware that recreating your crew does not get rid of crew members. You will need to '%ch+crew/boot <name>%cn' if you want to remove them. You can only boot provisional members.;

&c.+crew/join [v(d.cg)]=$+crew/join *:@break strmatch(%0, *=*); @eval setq(R, search(EPLAYER=cand(t(member(ulocal(f.get-player-stat, ##, crew object), ##)), strmatch(ulocal(f.get-player-stat, ##, crew name), %0*)))); @assert t(%qR)={ @trigger me/tr.error=%#, Couldn't find a crew named '%0'.; }; @assert eq(words(%qR), 1)={ @trigger me/tr.error=%#, There are multiple crews that start with '%0': [itemize(iter(%qR, ulocal(f.get-player-stat, itext(0), crew name),, |), |)].; }; @eval setq(T, xget(%vD, d.crew-invitation-time)); @assert t(gettimer(%#, crew.invite-%qR))={ @trigger me/tr.error=%#, You have not been invited to join that crew within the last [secs2hrs(%qT)]. Message [ulocal(f.get-name, %qR, %#)] for an invitation.; }; @assert not(member(setr(C, ulocal(f.get-player-stat, %#, crew object)), %#))={ @assert not(t(setdiff(ulocal(f.get-crew-members, %qC), %#)))={ @trigger me/tr.error=%#, You have existing crew members. Before you can join another crew%, you need to %ch+crew/transfer <player>%cn control of your current crew to someone else. If all of your crew's members are provisional%, you can %ch+crew/boot <name>%cn instead%, but if any of them are approved%, the crew must be transferred.; }; @trigger me/tr.message=%#, This will take you out of your existing crew%, [ulocal(f.get-player-stat, %qC, Crew Name)]. If you're sure you want to proceed%, type '+crew/join %0=YES' within the next 15 minutes. The time is now [prettytime()].; @eval settimer(%#, crew.join, 900); }; @set %#=[ulocal(f.get-stat-location-on-player, crew object)]:%qR; @trigger me/tr.success=%#, You have joined the %ch[ulocal(f.get-player-stat, %qR, crew name)]%cn crew. [if(not(isapproved(%0)), Note that this joining is provisional%, and is still subject to OOC approval by staff and the members of the crew.)];

&c.+crew/join_YES [v(d.cg)]=$+crew/join *=*:@assert gettimer(%#, crew.join)={ @trigger me/tr.error=%#, Your timeout has expired or you didn't type '+crew/join %0' yet. Please try again.; }; @assert t(match(%1, YES))={ @trigger me/tr.error=%#, You must type 'YES' to proceed with leaving your old crew.; }; @eval setq(R, search(EPLAYER=cand(t(member(ulocal(f.get-player-stat, ##, crew object), ##)), strmatch(ulocal(f.get-player-stat, ##, crew name), %1*)))); @assert t(%qR)={ @trigger me/tr.error=%0, Couldn't find a crew named '%1'.; }; @assert eq(words(%qR), 1)={ @trigger me/tr.error=%#, There are multiple crews that start with '%0': [itemize(iter(%qR, ulocal(f.get-player-stat, itext(0), crew name),, |), |)].; }; @set %#=[ulocal(f.get-stat-location-on-player, crew object)]:%qR; @trigger me/tr.success=%#, You have joined the %ch[ulocal(f.get-player-stat, %qR, crew name)]%cn crew. [if(not(isapproved(%0)), Note that this joining is provisional%, and is still subject to OOC approval by staff and the members of the crew.)];

&c.+crew/boot [v(d.cg)]=$+crew/boot *:@assert t(member(setr(C, ulocal(f.get-player-stat, %#, crew object)), %#))={ @trigger me/tr.error=%#, You must be the crew's statter in order to perform boots. Message [ulocal(f.get-name, %qR, %#)] or ask staff to intervene with %chreq/social <title>=<problem>%cn if the statter is not available.; }; @assert t(setr(P, ulocal(f.find-player, %0, %#)))={ @trigger me/tr.error=%#, Could not find a player named '%0'.; }; @assert t(setinter(ulocal(f.get-crew-members, %qC), %qP))={ @trigger me/tr.error=%#, ulocal(f.get-name, %qP, %#) is not a member of [ulocal(f.get-player-stat, %qC, crew name)].; }; @assert not(isapproved(%qP))={ @trigger me/tr.error=%#, [ulocal(f.get-name, %qP, %#)] is approved and cannot be booted from your crew without staff assistance. Please reach out to staff with %chreq/social <title>=<problem>%cn.; }; @set %qP=ulocal(f.get-stat-location-on-player, crew object):; @trigger me/tr.success=%#, You have booted [ulocal(f.get-name, %qP, %#)] from your crew. [capstr(subj(%qP))] [plural(%qP, has, have)] not been informed%, so you should let [obj(%qP)] know. If some form of harassment has taken place%, please report it to staff with %chreq/social <title>=<problem>%cn.;

&c.+crew/leave [v(d.cg)]=$+crew/leave:@assert t(setr(C, ulocal(f.get-player-stat, %#, crew object)))={ @trigger me/tr.error=%#, You don't appear to be in a crew.; }; @assert not(isapproved(%#))={ @trigger me/tr.error=%#, You're already approved and can't leave your crew without staff assistance. Please reach out to staff with %chreq/social <title>=<problem>%cn. Alternately%, you can try joining a new crew.; }; @set %#=ulocal(f.get-stat-location-on-player, crew object):; @trigger me/tr.success=%#, You have left your old crew.;

&layout.crew-invitation [v(d.cgf)]=cat(You have been invited to join, setr(0, ulocal(f.get-player-stat, %0, crew name)), by, ulocal(f.get-name, %0, %1)., To accept this invitation%, type %ch+crew/join %q0., This invitation is good for, secs2hrs(xget(%vD, d.crew-invitation-time)).)

&c.+crew/invite [v(d.cg)]=$+crew/invite *:@eval setq(C, ulocal(f.get-player-stat, %#, crew object)); @assert t(%qC)={ @trigger me/tr.error=%#, You don't currently have a crew set up. +crew/create <name> to start one.; }; @assert t(member(%qC, %#))={ @trigger me/tr.error=%#, You must be the crew's statter in order to invite people. Message [ulocal(f.get-name, %qR, %#)] to issue the invitation.; }; @assert t(setr(P, ulocal(f.find-player, %0, %#)))={ @trigger me/tr.error=%#, Could not find a player named '%0'.; }; @assert not(t(setinter(ulocal(f.get-crew-members, %qC), %qP)))={ @trigger me/tr.error=%#, ulocal(f.get-name, %qP, %#) is already a member of [ulocal(f.get-player-stat, %qC, crew name)].; }; @eval settimer(%qP, crew.invite-%qC, setr(D, xget(%vD, d.crew-invitation-time))); @trigger me/tr.success=%#, You have issued an invitation to [ulocal(f.get-name, %qP, %#)] to join [ulocal(f.get-player-stat, %qC, crew name)]. This invitation is good for [secs2hrs(%qD)].; @break t(member(xget(%vD, d.message-method), msg))={ @set %#=msg-send-crew_invitation:[default(%#/msg-send-crew_invitation, xget(%vD, d.crew_invitation_flair))]; @trigger %vC/switch.msg=/crew_invitation %qP=:sends: [ulocal(layout.crew-invitation, %qC, %qP)], %#; }; @assert andflags(%qP, C!D)={ @mail/quick %qP/Crew Invitation: [ulocal(f.get-player-stat, %qC, crew name)]=[ulocal(layout.crew-invitation, %0, %qP)]; }; @trigger me/tr.pemit=%qP, ulocal(layout.crew-invitation, %0, %qP), %#;


@@ Warning: Transferring will fuck up any issued invitations. May need to reissue or remove those.
&c.+crew/transfer [v(d.cg)]=$+crew/transfer *:@break strmatch(%0, *=*); @pemit %#=Crew owner transfers ownership of the crew to someone else.;
+crew/transfer asdf

&c.+crew/transfer_staff [v(d.cg)]=$+crew/transfer *=*: think Staff transfers ownership of a crew to someone else.; @trigger me/tr.success=%#, ;
